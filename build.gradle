buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'application'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'

version = mod_version
group = mod_group
archivesBaseName = mod_id

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            workingDirectory 'run'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }

        server {
            workingDirectory 'run'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }
    }
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url = "https://jitpack.io" }
    maven { url = 'https://litarvan.github.io/maven' }
    mavenCentral()
}

configurations {
    embed
    compile.extendsFrom(embed)
    lwjglNatives {
        transitive = false
    }
}

dependencies {
    embed("com.github.Sol-Client:LWJGL-Patched:bf1d105853")
    embed('fr.litarvan:openauth:1.1.3')

    implementation('se.michaelthelin.spotify:spotify-web-api-java:8.3.6')
    implementation('org.kohsuke:github-api:1.133')

    lwjglNatives("org.lwjgl:lwjgl:3.3.1:natives-windows")
    lwjglNatives("org.lwjgl:lwjgl-stb:3.3.1:natives-windows")
    lwjglNatives("org.lwjgl:lwjgl-nanovg:3.3.1:natives-windows")

    runtimeOnly(configurations.lwjglNatives)

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    embed('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
                'mcversion': minecraft_version, 'mod_description': mod_description,
                'mod_author': mod_author
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, mod_mixin_refmap.replace('${mod_id}', mod_id)
    config mod_mixin_configs.replace('${mod_id}', mod_id)
}

jar {
    from {
        configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'LICENSE.txt', 'META-INF/MANIFSET.MF', 'META-INF/maven/**', 'META-INF/*.RSA', 'META-INF/*.SF'
    }

    manifest {
        attributes('MixinConfigs': 'mixins.melyclient.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'me.hannsi.melyclient.mixin.system.LoadingPlugin',
                'ForceLoadAsMod': 'true',)
    }

    from(configurations.lwjglNatives.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/**', "**/**.git", "**/**.sha1"
    }
}

jar.finalizedBy('reobfJar')
